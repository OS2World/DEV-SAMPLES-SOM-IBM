
/*
 *  25H7912  (C)  COPYRIGHT International Business Machines Corp. 1992,1996,1996
 *  All Rights Reserved
 *  Licensed Materials - Property of IBM
 *  US Government Users Restricted Rights - Use, duplication or
 *  disclosure restricted by GSA ADP Schedule Contract with IBM Corp.
 *
 *
 *
 *
 * DISCLAIMER OF WARRANTIES.
 * The following [enclosed] code is sample code created by IBM
 * Corporation. This sample code is not part of any standard or IBM
 * product and is provided to you solely for the purpose of assisting
 * you in the development of your applications.  The code is provided
 * "AS IS". IBM MAKES NO WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT
 * NOT LIMITED TO THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
 * FOR A PARTICULAR PURPOSE, REGARDING THE FUNCTION OR PERFORMANCE OF
 * THIS CODE.  IBM shall not be liable for any damages arising out of
 * your use of the sample code, even if they have been advised of the
 * possibility of such damages.
 *
 * DISTRIBUTION.
 * This sample code can be freely distributed, copied, altered, and
 * incorporated into other software, provided that it bears the above
 * Copyright notice and DISCLAIMER intact.
 */

/************************************************************************************
 *
 *  Description of Interfaces defined in rentalg.idl (other interfaces for this sample
 *  are defined in rental.idl and rentalf.idl.
 *  ---------------------------------------------------------------------------------
 *
 *  Provides a generic factory that may be used for creating the LifeCycle objects defined
 *  here and in rental.idl and rentalf.idl.
 *
 *  GenericRentalFactory
 *
 *    - The generic factory which can be used to create all 'rental' related objects.
 *
 *    - It will use the create_object method to create Movie, Game, and
 *      CustomerAccount objects.  The user will pass in a key and criteria to
 *      indicate which object should be created and the initialization data
 *      to be used in real_object_creation and initialize_object (note these two
 *      methods being overridden in the corresponding implementations in rentalg.cpp.
 *
 ***********************************************************************************/

#ifndef SOM_rentalg_idl
#define SOM_rentalg_idl

#include <somlc.idl>
#include <snglicls.idl>


interface GenericRentalFactory : somLifeCycle::GenericFactory
{
#ifdef __SOMIDL__
  implementation {
    //# Class Modifiers
    functionprefix = GenericRentalFac_;
    dllname = "rental.dll";
    metaclass = SOMMSingleInstance;

    //# Method Modifiers
    real_object_creation: override;
    initialize_object: override;
    somDefaultInit: override;
    somDestruct: override;

  };
#endif /* __SOMIDL__ */
};


#endif  /* SOM_rentalg_idl */
