#
#
#    25H7912  (C)  COPYRIGHT International Business Machines Corp. 1992,1996,1996
#   All Rights Reserved
#   Licensed Materials - Property of IBM
#   US Government Users Restricted Rights - Use, duplication or
#   disclosure restricted by GSA ADP Schedule Contract with IBM Corp.
#

#
#
# DISCLAIMER OF WARRANTIES.
# The following [enclosed] code is sample code created by IBM
# Corporation. This sample code is not part of any standard or IBM
# product and is provided to you solely for the purpose of assisting
# you in the development of your applications.  The code is provided
# "AS IS". IBM MAKES NO WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT
# NOT LIMITED TO THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
# FOR A PARTICULAR PURPOSE, REGARDING THE FUNCTION OR PERFORMANCE OF
# THIS CODE.  IBM shall not be liable for any damages arising out of
# your use of the sample code, even if they have been advised of the
# possibility of such damages.
#
# DISTRIBUTION.
# This sample code can be freely distributed, copied, altered, and
# incorporated into other software, provided that it bears the above
# Copyright notice and DISCLAIMER intact.
#

# This make file has settings for IBM VisualAge C++ version 3.x for OS/2
# It is may be used with the nmake program.

# General settings
MAKEFILE     = makefile.age
SYS          = OS2
CC           = icc
CPPC         = icc
SC           = sc
LINKER       = ilink
IMPLIB       = implib
RM           = del
OBJ          = obj
CFLAGS       = $(DLL_CFLAGS)
CPPFLAGS     = $(DLL_CPPFLAGS)
SCFLAGS      = -p
TARGETS      = $(DLL_TARGET).$(DLL_EXT) $(EXE_TARGET).$(EXE_EXT) somdimpl
CLEANFILES   = $(DLL_TARGET).$(DLL_LIBEXT) $(DLL_TARGET).$(DLL_DEF) $(DLL_INITMOD).* $(TARGETS)

# EXE build settings
EXE_CFLAGS   = -W3 -c -Ti+ -Q+ -Gd- -Gm+ -Gs+ -Sm -Ss+
EXE_CPPFLAGS = -W3 -c -Ti+ -Q+ -Gd- -Gm+ -Gs+ -Sm
# removed /nofr from below and added /Debug
EXE_LFLAGS   = /exepack /packd /packc /align:4 /stack:360000 /pm:vio /noe /noi /nol /Debug
EXE_OBJS     =  nametest.obj NameMgr.obj
EXE_SYSOBJS  =
EXE_LIBS     = vehicle.lib somtk.lib os2386.lib
EXE_TARGET   = nametest
EXE_EXT      = exe
EXE_IDLS     =
EXE_CSRC     =
EXE_CPPSRC   = nametest.cpp

# added for generic OBJ
OBJ_CPPFLAGS = -W3 -c -Ti+ -Q+ -Gd- -Gm+ -Gs+ -Ge+ -Sm

# DLL build settings
DLL_INITMOD  = sinitmod
DLL_CFLAGS   = -W3 -c -Ti+ -Q+ -Gd- -Gm+ -Gs+ -Ge- -Sm -Ss+
DLL_CPPFLAGS = -W3 -c -Ti+ -Q+ -Gd- -Gm+ -Gs+ -Ge- -Sm
# also removed /nofr and added /Debug below
DLL_LFLAGS   = /Debug /exepack /packd /packc /align:4 /stack:360000 /pm:vio /noe /noi /nol
DLL_OBJS     =  vehicle.obj sinitmod.obj
DLL_SYSOBJS  =
DLL_LIBS     = somtk.lib
DLL_TARGET   = vehicle
DLL_EXT      = dll
DLL_LIBEXT   = lib
DLL_DEF      = def
DLL_IDLS     = vehicle.idl
DLL_CSRC     =
DLL_CPPSRC   = vehicle.cpp

all: $(TARGETS)

# DLL target removed commas from bottom line also removed $@ and NUL
$(DLL_TARGET).$(DLL_EXT): $(DLL_OBJS) $(DLL_TARGET).$(DLL_LIBEXT)
	$(LINKER) $(DLL_LFLAGS) $(DLL_OBJS) $(DLL_SYSOBJS) $(DLL_LIBS) $(DLL_TARGET).$(DLL_DEF)

# DLL "Import" library target
$(DLL_TARGET).$(DLL_LIBEXT): $(DLL_TARGET).$(DLL_DEF)
	$(IMPLIB) $(DLL_TARGET).$(DLL_LIBEXT) $(DLL_TARGET).$(DLL_DEF)

# DLL exports file
$(DLL_TARGET).$(DLL_DEF): $(DLL_IDLS)
	$(SC) $(SCFLAGS) -s$(DLL_DEF) -mdll=$(DLL_TARGET) $(DLL_IDLS)

# DLL SOMInitModule function
$(DLL_INITMOD).$(OBJ): $(DLL_INITMOD).c
	$(CC) $(DLL_CFLAGS) $*.c

$(DLL_INITMOD).c: $(DLL_IDLS)
	$(SC) $(SCFLAGS) -simod -mdll=$(DLL_TARGET) -mimod=$@ $(DLL_IDLS)

# EXE target
$(EXE_TARGET).$(EXE_EXT): $(EXE_OBJS)
# took out ,$@,NUL, from below
	$(LINKER) $(EXE_LFLAGS) $(EXE_OBJS) $(EXE_SYSOBJS) $(EXE_LIBS)

# Build DSOM Implementation Repository
somdimpl:
 -regimpl -A -i vehiclesvr -p somossvr.exe -v somOS::Server -m on
 -regimpl -a -i vehiclesvr -c vehicle

	@echo somdimpl > somdimpl

# Clean up files that can be re-built
clean: cleanfiles cleanimpl

cleanfiles:
	-del *.$(OBJ) >nul 2>&1
	-del $(EXE_IDLS:.idl=.h) $(DLL_IDLS:.idl=.h) >nul 2>&1
	-del $(EXE_IDLS:.idl=.ih) $(DLL_IDLS:.idl=.ih) >nul 2>&1
	-del $(EXE_IDLS:.idl=.xh) $(DLL_IDLS:.idl=.xh) >nul 2>&1
	-del $(EXE_IDLS:.idl=.xih) $(DLL_IDLS:.idl=.xih) >nul 2>&1
	-del *.ir >nul 2>&1
	-del $(CLEANFILES) >nul 2>&1

cleanimpl:
	-regimpl -D -i vehiclesvr

# Suffix rules for building source files
.SUFFIXES: .$(OBJ) .cpp .c .xih .xh .ih .h .idl

.cpp.$(OBJ):
	$(CPPC) $(CPPFLAGS) $<


.c.$(OBJ):
	$(CC) $(CFLAGS) $<


.idl.cpp:
	$(SC) $(SCFLAGS) -usir;xc $<


.idl.c:
	$(SC) $(SCFLAGS) -usir;c $<


.idl.xih:
	$(SC) $(SCFLAGS) -usir;xih $<


.idl.xh:
	$(SC) $(SCFLAGS) -usir;xh $<


.idl.ih:
	$(SC) $(SCFLAGS) -usir;ih $<


.idl.h:
	$(SC) $(SCFLAGS) -usir;h $<


# Dependencies follow
namemgr.obj: namemgr.cpp namemgr.h
 $(CPPC) -W3 -c -Ti+ -Q+ -Gd- -Gm+ -Gs+ -Ge+ -Sm namemgr.cpp

nametest.obj: nametest.cpp
 $(CPPC) $(EXE_CPPFLAGS) nametest.cpp

vehicle.ih: vehicle.idl
vehicle.h: vehicle.idl

vehicle.obj: vehicle.cpp vehicle.xih vehicle.xh
 $(CPPC) $(DLL_CPPFLAGS) vehicle.cpp




