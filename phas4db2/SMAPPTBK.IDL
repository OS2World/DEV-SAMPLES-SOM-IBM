// 3/8/96 15:59:28
/*
#
#
#    25H7912  (C)  COPYRIGHT International Business Machines Corp. 1996
#   All Rights Reserved
#   Licensed Materials - Property of IBM
#   US Government Users Restricted Rights - Use, duplication or
#   disclosure restricted by GSA ADP Schedule Contract with IBM Corp.
*/
/*
 *
 *
 * DISCLAIMER OF WARRANTIES.
 * The following [enclosed] code is sample code created by IBM
 * Corporation. This sample code is not part of any standard or IBM
 * product and is provided to you solely for the purpose of assisting
 * you in the development of your applications.  The code is provided
 * "AS IS". IBM MAKES NO WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT
 * NOT LIMITED TO THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
 * FOR A PARTICULAR PURPOSE, REGARDING THE FUNCTION OR PERFORMANCE OF
 * THIS CODE.  IBM shall not be liable for any damages arising out of
 * your use of the sample code, even if they have been advised of the
 * possibility of such damages.
 *
 * DISTRIBUTION.
 * This sample code can be freely distributed, copied, altered, and
 * incorporated into other software, provided that it bears the above
 * Copyright notice and DISCLAIMER intact.
 */

//
// This idl file contains the module/interface definitions for the
// 2 schema mappers that are used by the DB2 persistent store.  One
// schema mapper is for the appointment books themselves and the
// second one is for the appointments.
//
// Each of the schema mappers require sqlca to be defined at file
// scope.  This means that if they are in separate c or cpp files
// the linker will complain that sqlca is multiply defined if you
// try to put them both into the same dll.  To avoid this, the
// schema mappers that are used in this sample are both defined here
// and are wrappered by module statements so that we do not have
// multiply defined methods.

#include <sompdb2.idl>

interface smapptbk;          // forward reference

//#
//# This module contains the idl for the schema mapper that is used
//# for the persistent appointment books.
//#
module BookMapper {
interface smapptbk : somPersistenceDB2::SchemaMapper {

   implementation {

      override: store, restore, Delete;
      dllname = "apptbk.dll";
   };
};
};

interface smappt;            // forward reference
//#
//# This module contains the idl for the schema mapper that is used
//# for the persistent appointments.
//#
module AppointmentMapper {
interface smappt : somPersistenceDB2::SchemaMapper {

   implementation {

      override: store, restore, Delete;
      dllname = "apptbk.dll";
   };
};
};
