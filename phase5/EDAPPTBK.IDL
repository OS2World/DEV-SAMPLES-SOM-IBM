// 3/8/96 16:13:15
/*
#
#
#    25H7912  (C)  COPYRIGHT International Business Machines Corp. 1996
#   All Rights Reserved
#   Licensed Materials - Property of IBM
#   US Government Users Restricted Rights - Use, duplication or
#   disclosure restricted by GSA ADP Schedule Contract with IBM Corp.
#
*/
/*
 *
 *
 * DISCLAIMER OF WARRANTIES.
 * The following [enclosed] code is sample code created by IBM
 * Corporation. This sample code is not part of any standard or IBM
 * product and is provided to you solely for the purpose of assisting
 * you in the development of your applications.  The code is provided
 * "AS IS". IBM MAKES NO WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT
 * NOT LIMITED TO THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
 * FOR A PARTICULAR PURPOSE, REGARDING THE FUNCTION OR PERFORMANCE OF
 * THIS CODE.  IBM shall not be liable for any damages arising out of
 * your use of the sample code, even if they have been advised of the
 * possibility of such damages.
 *
 * DISTRIBUTION.
 * This sample code can be freely distributed, copied, altered, and
 * incorporated into other software, provided that it bears the above
 * Copyright notice and DISCLAIMER intact.
 */

#ifndef edapptbk_idl
#define edapptbk_idl

#include <pdapptbk.idl>
#include <es_impl.idl>

interface EventPersDistAppointmentBook : PersistentDistributedAppointmentBook, CosEventComm::PushSupplier
{
  // A EventDistAppointmentBook is a persistent appointment book that
  // passes the users an event each time an appointment is added. It is a
  // subclass of  CosEventComm::PushSupplier to provide event Service interfaces.
  // It is also a subclass of the Persistent appointment book from the previous phase.
  // The class overrides the method to add appointments to add the event
  // handling. It also adds a method to connect the address book
  // as a push supplier to the event channel.

    attribute unsigned long  myProxyPushConsumer;

    void eventChannelConnect();
    //This method connects the appointment book to the event channel.

    #ifdef __SOMIDL__
      implementation {
        dllname = "apptbk.dll";

       // Method Modifiers
       addAppointment : override;
       deleteAppointment : override;

       releaseorder: _get_myProxyPushConsumer, _set_myProxyPushConsumer,
                     eventChannelConnect;

       // The factory modifier indicates which factory class can create
       // instances of the DistributedAppointmentBook class
       factory=EventPersDistAppointmentBookFactory;


      };
    #endif /* __SOMIDL__ */
};
#endif /* edapptbk_idl */
