//# Description: Simple list and iterator class definitions.
//#
//# Author:      Joseph H McIntyre
//#
//# (C) COPYRIGHT International Business Machines Corp. 1995, 1996
//# All Rights Reserved
//# Licensed Materials - Property of IBM
//#
//# US Government Users Restricted Rights - Use, duplication or
//# disclosure restricted by GSA ADP Schedule Contract with IBM Corp.
//#
//# DISCLAIMER OF WARRANTIES.  The following [enclosed] code is
//# sample code created by IBM Corporation. This sample code is not
//# part of any standard or IBM product and is provided to you solely
//# for the purpose of assisting you in the development of your
//# applications.  The code is provided "AS IS", without
//# warranty of any kind.  IBM shall not be liable for any damages
//# arising out of your use of the sample code, even if they have been
//# advised of the possibility of such damages.


#ifndef _BASELIST_
#define _BASELIST_

#include <somobj.idl>


interface jmBaseList;

interface jmBaseIterator : SOMObject
 {
    void      jmBaseIterator_Init (inout somInitCtrl ctrl, in jmBaseList list, in unsigned long count);

    SOMObject First ();
    SOMObject Next ();
    SOMObject Previous ();
    boolean   IsNotComplete ();

    #ifdef __SOMIDL__
    implementation
     {
        majorversion   = 1;
        minorversion   = 0;
        functionprefix = "Iterator_";
        dllname        = "jmbase.dll";

        releaseorder:
            jmBaseIterator_Init,
            First,
            Next,
            Previous,
            IsNotComplete;

        override:
            somDefaultInit,
            somDestruct;

        somDefaultInit: init;
        jmBaseIterator_Init: init;

        // private variables
        unsigned long ulIndex;
        unsigned long ulCount;
        boolean       valid;
        jmBaseList    list;
     };
    #endif
 };

interface jmBaseList : SOMObject
 {
    jmBaseIterator CreateIterator ();
    void           Add (in SOMObject object);
    void           Remove (in SOMObject object);
    void           RemoveAll ();
    SOMObject      GetObject (in unsigned long index);
    boolean        Contains (in SOMObject object);
    unsigned long  Count ();

    #ifdef __SOMIDL__
    implementation
     {
        majorversion   = 1;
        minorversion   = 0;
        functionprefix = "List_";
        dllname        = "jmbase.dll";

        releaseorder:
            CreateIterator,
            Add,
            Remove,
            RemoveAll,
            GetObject,
            Contains,
            Count;

        override:
            somDefaultInit,
            somDestruct;

        somDefaultInit: init;

        // private variables
        sequence <SOMObject> list;
     };
    #endif
 };
#endif
