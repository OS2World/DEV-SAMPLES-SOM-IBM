//
//   COMPONENT_NAME: somx
//
//   ORIGINS: 27
//
//
//    25H7912  (C)  COPYRIGHT International Business Machines Corp. 1992,1996,1996  
//   All Rights Reserved
//   Licensed Materials - Property of IBM
//   US Government Users Restricted Rights - Use, duplication or
//   disclosure restricted by GSA ADP Schedule Contract with IBM Corp.
//
/*
 *    @(#)39 1.5 12/27/95 13:53:03 [1/24/96] (c)IBM Corp. 1994
 */


/*
 *
 * DISCLAIMER OF WARRANTIES.
 * The following [enclosed] code is sample code created by IBM
 * Corporation. This sample code is not part of any standard or IBM
 * product and is provided to you solely for the purpose of assisting
 * you in the development of your applications.  The code is provided
 * "AS IS". IBM MAKES NO WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT
 * NOT LIMITED TO THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
 * FOR A PARTICULAR PURPOSE, REGARDING THE FUNCTION OR PERFORMANCE OF
 * THIS CODE.  IBM shall not be liable for any damages arising out of
 * your use of the sample code, even if they have been advised of the
 * possibility of such damages.
 *
 * DISTRIBUTION.
 * This sample code can be freely distributed, copied, altered, and
 * incorporated into other software, provided that it bears the above
 * Copyright notice and DISCLAIMER intact.
 */

#include <somobj.idl>
#include <somcls.idl>
#include <mcollect.idl>
#include <tset.idl>
#include <tpll.idl>
#include <transact.idl>

/*
 * the type of accounts that this bank supports
 * the type of methods that are allowed on these objects
 * error codes returned
 */


interface Account: somf_MCollectible
{

enum acct_type { CHECKING, SAVINGS, MF };
enum trans_type { STORE, DRAW, OPEN, CLOSE, BALANCE, TRANS };
enum error_code {OK, BAD_PIN, ACCT_EXISTS, NO_ACCT, LESS_MONEY, NOT_MATURE };

     attribute    string user_name;
     attribute    long act_balance;
     attribute    long min_balance;
     attribute    long interest;
     attribute    long pin;
     attribute    somf_TPrimitiveLinkedList trans_list;

     long Withdraw (in long amount, in long pin);
     long Deposit (in long amount);
     trans_info  Transactions (inout long cursor);

#ifdef __SOMIDL__
    implementation  {
          dllname = "bank.dll";
          releaseorder: Withdraw, Deposit,Transactions,
                         _set_user_name, _get_user_name,
                         _set_act_balance, _get_act_balance,
                         _set_min_balance, _get_min_balance,
                         _set_interest, _get_interest,
                         _set_pin, _get_pin,
                         _set_trans_list, _get_trans_list;
          memory_management = corba;
	 //# parameter memory management is CORBA-compliant unless
	 //# indicated otherwise by modifiers.

	 //# method modifiers:
	 somfIsEqual: override;
	 _get_user_name: object_owns_result;
	 _set_user_name: object_owns_parameters = "user_name";
	 _get_trans_list: object_owns_result;
	 _set_trans_list: object_owns_parameters = "trans_list";
    };
#endif

};
